#!/bin/bash

# New Robot Install

apt-get update
apt-get install software-properties-common -y
add-apt-repository ppa:ubuntu-toolchain-r/test -y
apt-get update
apt-get dist-upgrade -y
apt-get install vim wireless-tools wpasupplicant -y

cat << EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# Loopback
auto lo
iface lo inet loopback

# Wifi + Ethernet Bonding
allow-hotplug wlp2s0
iface wlp2s0 inet manual
    wpa-ssid "epsilon-x"
    wpa-psk 9181918191
    wpa-bridge bond0
    bond-master bond0
    bond-mode active-backup
    bond-miimon 1000
    bond-give-a-chance 10

allow-hotplug bond0
iface bond0 inet static
    address 10.1.1.11
    netmask 255.255.0.0
    gateway 10.1.3.1
    dns-nameserver 10.1.3.1
    bond-slaves wlp2s0 enp0s25
    bond-mode active-backup
    bond-primary enp0s25
    bond-miimon 1000

EOF

ifup bond0

cat << EOF > /etc/udev/rules.d/100-nubots.rules
# Set permissions for ttyUSB0 (CM730) and video* (webcam) devices
KERNEL=="ttyUSB*", MODE="0666"
KERNEL=="video*", MODE="0666"

# Symlink the CM730 device to /dev/CM730
KERNEL=="ttyUSB*", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", MODE="0666", SYMLINK+="CM730"

# Symlink the Logitech CM920 webcam to /dev/CAM
KERNEL=="video*", ATTRS{idVendor}=="046d", ATTRS{idProduct}=="082d", MODE="0666", SYMLINK+="CAM"

# Symlink the Creative Labs LIVE! CAM Chat HD webcam to /dev/CAM
KERNEL=="video*", ATTRS{idVendor}=="041e", ATTRS{idProduct}=="4097", MODE="0666", SYMLINK+="CAM"

# Make sure the USB devices end up in the pgrimaging group.
SUBSYSTEM=="usb", GROUP="pgrimaging"

EOF

cat << EOF > /etc/rc.local
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Set volume to 100%
amixer sset Master 100%

# Disable CPU throttling
update-rc.d ondemand disable

exit 0
EOF

# Install robocup.service to /etc/systemd/system (when using systemd) to allow robocup to autostart
cat << EOF > /etc/systemd/system/robocup.service
[Unit]
Description="RoboCup auto-start unit"
Wants=network.target
After=network.target
RequiresMountsFor=/home/nubots

[Service]
Type=simple
Restart=always
WorkingDirectory=/home/nubots
User=nubots
Environment=HOME="/home/nubots/" LD_LIBRARY_PATH="/home/nubots/toolchain"
PassEnvironment=HOME LD_LIBRARY_PATH
ExecStart=/home/nubots/robocup

[Install]
WantedBy=multi-user.target
EOF

# Taken from https://gist.github.com/akatch/cdb707856d467bd7cacd
cat << EOF > /etc/systemd/system/xboxdrv.service
# Systemd unit to enable xboxdrv driver for Xbox 360 controller
# Usage:
# save to /lib/systemd/system/xboxdrv.service
# to start: sudo service xboxdrv start
# to enable on boot: sudo systemctl enable xboxdrv

[Unit]
Description=Xbox controller driver daemon

[Service]
Type=forking
User=root
PIDFile=/var/run/xboxdrv.pid
ExecStart=/usr/bin/xboxdrv --daemon --detach --pid-file /var/run/xboxdrv.pid --dbus disabled --silent --mimic-xpad

[Install]
WantedBy=multi-user.target
EOF

# Enable autostarting of the robocup service
systemctl enable robocup.service

# Enable autostarting of the xboxdrv service
systemctl enable xboxdrv.service

# Remove network delay by commenting out the delays
sed -ri 's/(sleep (:?20|40|59))/#\1/' /etc/init/failsafe.conf

# Added boot fail fix
sed -i '/GRUB_CMDLINE_LINUX=""/a GRUB_RECORDFAIL_TIMEOUT=0' /etc/default/grub
update-grub

# Remove password requirement to use sudo
sed -ri 's/(%sudo.*)(ALL)/\1NOPASSWD:\2/' /etc/sudoers
